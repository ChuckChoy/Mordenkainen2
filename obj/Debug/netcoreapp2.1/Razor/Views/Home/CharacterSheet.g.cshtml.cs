#pragma checksum "C:\Users\sschl\Desktop\Homework\Senior Capstone\Mordenkainen2-master\Mordenkainen2\Views\Home\CharacterSheet.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a3cb146a68cacae9c11caf862ffe8da5a04519fb"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_CharacterSheet), @"mvc.1.0.view", @"/Views/Home/CharacterSheet.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/CharacterSheet.cshtml", typeof(AspNetCore.Views_Home_CharacterSheet))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\sschl\Desktop\Homework\Senior Capstone\Mordenkainen2-master\Mordenkainen2\Views\_ViewImports.cshtml"
using Mordenkainen2;

#line default
#line hidden
#line 2 "C:\Users\sschl\Desktop\Homework\Senior Capstone\Mordenkainen2-master\Mordenkainen2\Views\_ViewImports.cshtml"
using Mordenkainen2.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a3cb146a68cacae9c11caf862ffe8da5a04519fb", @"/Views/Home/CharacterSheet.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"86ef42ba48311e3c88645bb7689a2b5daff39825", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_CharacterSheet : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<CharacterSheetViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("sheetObj"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "C:\Users\sschl\Desktop\Homework\Senior Capstone\Mordenkainen2-master\Mordenkainen2\Views\Home\CharacterSheet.cshtml"
  
    ViewData["Title"] = "CharacterSheet";
    CharacterSheetViewModel character = new CharacterSheetViewModel();

#line default
#line hidden
            BeginContext(149, 443, true);
            WriteLiteral(@"

<!--Note to self. Use inputs, all with the same id, then add an onchange event listener in javascript,
    so that when any of the inputs change I can send it off in an https request. Then maybe put some sort of 
    timer before the save triggers again?-->
<div class="""">
    <span>Character selection</span>
    <select id=""characterSelect"" width=""50px"">

    </select>
</div>
<div class=""container-fluid"">
    <h2>CharacterSheet</h2>
    ");
            EndContext();
            BeginContext(592, 65, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d1aa0ffe44cf41faaefe2bcea5c25dc6", async() => {
                BeginContext(634, 15, true);
                WriteLiteral("Character Level");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
#line 19 "C:\Users\sschl\Desktop\Homework\Senior Capstone\Mordenkainen2-master\Mordenkainen2\Views\Home\CharacterSheet.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.CharacterSheet.CharLevel);

#line default
#line hidden
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(657, 5, true);
            WriteLiteral("\n    ");
            EndContext();
            BeginContext(662, 61, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "575615ffecd04415a6aca73b33272ad0", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#line 20 "C:\Users\sschl\Desktop\Homework\Senior Capstone\Mordenkainen2-master\Mordenkainen2\Views\Home\CharacterSheet.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.CharacterSheet.CharLevel);

#line default
#line hidden
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(723, 6261, true);
            WriteLiteral(@"
</div>

<div class=""container-fluid"">
    <!--Header-->
    <div class=""row"">
        <div style=""border: 1px solid black"" class=""col-md-4 col-12"" id=""CharacterName"">
            Character Name
        </div>
        <div style=""border: 1px solid black"" class=""col-md-8 col-12"">
            <div class=""row"">
                <div class=""col-4"">Class and Level</div>
                <div class=""col-4"">Background</div>
                <div class=""col-4"">Player name</div>
                <div class=""col-4"">Race</div>
                <div class=""col-4"">Alignment</div>
                <div class=""col-4"">Experience Points</div>
            </div>
        </div>
        <!--Column one: Skills, saving throws, and bonus profs.-->
        <div class=""col-md-4 col-12"">
            <div class=""row"">
                <div style=""border: 1px solid black"" class=""col-md-6 col-12"">
                    Ability Scores
                    <div class=""row"">
                        <div class=""col-md-12 col-4"">S");
            WriteLiteral(@"trength</div>
                        <div class=""col-md-12 col-4"">Dexterity</div>
                        <div class=""col-md-12 col-4"">Constitution</div>
                        <div class=""col-md-12 col-4"">Intelligence</div>
                        <div class=""col-md-12 col-4"">Wisdom</div>
                        <div class=""col-md-12 col-4"">Charisma</div>
                    </div>
                </div>
                <div class=""col-md-6 col-12"">
                    <div style=""border: 1px solid black"" class=""row"">
                        <div class=""col-12"">Proficiency Bonus</div>
                    </div>
                    <div style=""border: 1px solid black"" class=""row"">
                        <div class=""col-md-12 col-6"">Strength</div>
                        <div class=""col-md-12 col-6"">Dexterity</div>
                        <div class=""col-md-12 col-6"">Constitution</div>
                        <div class=""col-md-12 col-6"">Intelligence</div>
                        <div class");
            WriteLiteral(@"=""col-md-12 col-6"">Wisdom</div>
                        <div class=""col-md-12 col-6"">Charisma</div>
                        <b>Saving Throws</b>
                    </div>
                    <div style=""border: 1px solid black"" class=""row"">
                        <div class=""col-md-12 col-3"">Acrobatics</div>
                        <div class=""col-md-12 col-3"">Animal Handling</div>
                        <div class=""col-md-12 col-3"">Arcana</div>
                        <div class=""col-md-12 col-3"">Athletics</div>
                        <div class=""col-md-12 col-3"">Deception</div>
                        <div class=""col-md-12 col-3"">History</div>
                        <div class=""col-md-12 col-3"">Insight</div>
                        <div class=""col-md-12 col-3"">Intimidation</div>
                        <div class=""col-md-12 col-3"">Investigation</div>
                        <div class=""col-md-12 col-3"">Medicine</div>
                        <div class=""col-md-12 col-3"">Nature</div>
    ");
            WriteLiteral(@"                    <div class=""col-md-12 col-3"">Perception</div>
                        <div class=""col-md-12 col-3"">Performance</div>
                        <div class=""col-md-12 col-3"">Persuasion</div>
                        <div class=""col-md-12 col-3"">Religion</div>
                        <div class=""col-md-12 col-3"">Slight Of Hand</div>
                        <div class=""col-md-12 col-3"">Stealth</div>
                        <div class=""col-md-12 col-3"">Survival</div>
                    </div>
                </div>
                <div class=""col-md-6 col-12"" style=""border: 1px solid black"">Bonus Proficiencies</div>
            </div>
        </div>
        <!--Column two: Defense, Attacks, Equipment-->
        <div class=""col-md-4 col-12"">
            <div class=""row"">
                <div class=""col-4 text-center"" style=""border: 1px solid black"">AC</div>
                <div class=""col-4 text-center"" style=""border: 1px solid black"">Initiative</div>
                <div class=""c");
            WriteLiteral(@"ol-4 text-center"" style=""border: 1px solid black"">Speed</div>
                <div class=""col-12 text-center"" style=""border: 1px solid black"">Current HP</div>
                <div class=""col-12 text-center"" style=""border: 1px solid black"">Temp HP</div>
                <div class=""col-6 text-center"" style=""border: 1px solid black"">Hit Dice</div>
                <div class=""col-6 text-center"" style=""border: 1px solid black"">Death Saving Throws</div>
                    
                <div class=""col-12"" style=""border: 1px solid black"">Attacks and Spell Casting</div>

                <div class=""col-12"" style=""border: 1px solid black"">
                    <div class=""row"">
                        <div class=""col-4"">Money</div>
                        <div class=""row"">
                            <div class=""col-12"">Platinum</div>
                            <div class=""col-12"">Gold</div>
                            <div class=""col-12"">Electrum</div>
                            <div class=""col-12");
            WriteLiteral(@""">Silver</div>
                            <div class=""col-12"">Copper</div>
                        </div>
                        <div class=""col-8"">
                            Equipment
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <!--Column three: Character Traits, Features & Traits-->
        <div class=""col-md-4 col-12"">
            <div class=""row"">
                    <div class=""col-12"" style=""border: 1px solid black"">Character Traits</div>
                    <div class=""col-12"" style=""border: 1px solid black"">Ideals</div>
                    <div class=""col-12"" style=""border: 1px solid black"">Bonds</div>
                    <div class=""col-12"" style=""border: 1px solid black"">Flaws</div>
                    <div class=""col-12"" style=""border: 1px solid black"">Featrues & Traits</div>
            </div>
        </div>
        

<script>
$(""#characterSelect"").change(function (e) {
    var actionUrl = ""Ge");
            WriteLiteral("tSelectedCharacter\";\n    var data = e.target.value;\n    $.post(actionUrl, { charID: data } ,function (res) {\n        ");
            EndContext();
            BeginContext(6985, 9, false);
#line 139 "C:\Users\sschl\Desktop\Homework\Senior Capstone\Mordenkainen2-master\Mordenkainen2\Views\Home\CharacterSheet.cshtml"
   Write(character);

#line default
#line hidden
            EndContext();
            BeginContext(6994, 30, true);
            WriteLiteral(" = res;\n    });\n});\n</script>\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<CharacterSheetViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
